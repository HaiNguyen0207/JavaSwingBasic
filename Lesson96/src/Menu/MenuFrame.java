package Menu;

import java.awt.Color;
import java.awt.Font;
import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;
import java.awt.font.TextAttribute;
import java.util.Map;

/**
 *
 * @author unilap
 */
public class MenuFrame extends javax.swing.JFrame implements ActionListener {

    private String txt;
    private static final int FONT_SIZE = 14;

    public MenuFrame() {
        initComponents();
        setLocationRelativeTo(null);
        txt = txtText.getText();
        addActionListener();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        btnGroupColor = new javax.swing.ButtonGroup();
        buttonGroupFontSize = new javax.swing.ButtonGroup();
        jPanel1 = new javax.swing.JPanel();
        jScrollPane1 = new javax.swing.JScrollPane();
        txtText = new javax.swing.JTextArea();
        jLabel1 = new javax.swing.JLabel();
        jMenuBar1 = new javax.swing.JMenuBar();
        menuFile = new javax.swing.JMenu();
        menuItemSave = new javax.swing.JMenuItem();
        menuItemEdit = new javax.swing.JMenuItem();
        menuItemRemove = new javax.swing.JMenuItem();
        menuItemExit = new javax.swing.JMenuItem();
        jMenu2 = new javax.swing.JMenu();
        menuCheckboxUpper = new javax.swing.JCheckBoxMenuItem();
        meunuCheckboxBold = new javax.swing.JCheckBoxMenuItem();
        menuCheckboxUnderline = new javax.swing.JCheckBoxMenuItem();
        menuItemRed = new javax.swing.JMenu();
        red = new javax.swing.JMenuItem();
        blue = new javax.swing.JMenuItem();
        green = new javax.swing.JMenuItem();
        black = new javax.swing.JMenuItem();
        menuFontsize = new javax.swing.JMenu();
        menuRadio150 = new javax.swing.JRadioButtonMenuItem();
        menuRadio100 = new javax.swing.JRadioButtonMenuItem();
        menuRadio75 = new javax.swing.JRadioButtonMenuItem();
        menuRadio50 = new javax.swing.JRadioButtonMenuItem();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HaiNguyen");
        setResizable(false);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Th√¥ng Tin ", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(255, 51, 0))); // NOI18N

        jScrollPane1.setEnabled(false);

        txtText.setEditable(false);
        txtText.setColumns(20);
        txtText.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtText.setLineWrap(true);
        txtText.setRows(5);
        jScrollPane1.setViewportView(txtText);

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 456, Short.MAX_VALUE)
                .addGap(10, 10, 10))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 278, Short.MAX_VALUE)
                .addGap(20, 20, 20))
        );

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Learn Menu");

        menuFile.setText("File");
        menuFile.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuItemSave.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_S, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuItemSave.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuItemSave.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/save-24px.png"))); // NOI18N
        menuItemSave.setText("Save");
        menuFile.add(menuItemSave);

        menuItemEdit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuItemEdit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuItemEdit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pen-24px.png"))); // NOI18N
        menuItemEdit.setText("Edit Text");
        menuFile.add(menuItemEdit);

        menuItemRemove.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_R, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuItemRemove.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuItemRemove.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete-24px.png"))); // NOI18N
        menuItemRemove.setText("Remove Text");
        menuFile.add(menuItemRemove);

        menuItemExit.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuItemExit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuItemExit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/turn-off-24px.png"))); // NOI18N
        menuItemExit.setText("Exit");
        menuFile.add(menuItemExit);

        jMenuBar1.add(menuFile);

        jMenu2.setText("Style And Color");
        jMenu2.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuCheckboxUpper.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_A, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuCheckboxUpper.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuCheckboxUpper.setText("Upper");
        menuCheckboxUpper.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/upper-text.png"))); // NOI18N
        jMenu2.add(menuCheckboxUpper);

        meunuCheckboxBold.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_B, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        meunuCheckboxBold.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        meunuCheckboxBold.setText("Bold");
        meunuCheckboxBold.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/bold-type.png"))); // NOI18N
        jMenu2.add(meunuCheckboxBold);

        menuCheckboxUnderline.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_U, java.awt.event.InputEvent.ALT_DOWN_MASK | java.awt.event.InputEvent.SHIFT_DOWN_MASK));
        menuCheckboxUnderline.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuCheckboxUnderline.setText("Underline");
        menuCheckboxUnderline.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/underlined-text.png"))); // NOI18N
        jMenu2.add(menuCheckboxUnderline);

        menuItemRed.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dropper-16px.png"))); // NOI18N
        menuItemRed.setText("Color");
        btnGroupColor.add(menuItemRed);
        menuItemRed.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        red.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_D, java.awt.event.InputEvent.ALT_DOWN_MASK));
        red.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        red.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/red-16px.png"))); // NOI18N
        red.setText("RED");
        menuItemRed.add(red);

        blue.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_ENTER, 0));
        blue.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        blue.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/blue-16px.png"))); // NOI18N
        blue.setText("BLUE");
        menuItemRed.add(blue);

        green.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_G, java.awt.event.InputEvent.ALT_DOWN_MASK));
        green.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        green.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/green-16px.png"))); // NOI18N
        green.setText("GREEN");
        menuItemRed.add(green);

        black.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_E, java.awt.event.InputEvent.ALT_DOWN_MASK));
        black.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        black.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/black-16px.png"))); // NOI18N
        black.setText("BLACK");
        menuItemRed.add(black);

        jMenu2.add(menuItemRed);

        jMenuBar1.add(jMenu2);

        menuFontsize.setText("Font size");
        buttonGroupFontSize.add(menuFontsize);
        menuFontsize.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        menuRadio150.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_1, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuRadio150.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuRadio150.setText("150%");
        menuFontsize.add(menuRadio150);

        menuRadio100.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_2, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuRadio100.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuRadio100.setSelected(true);
        menuRadio100.setText("100%");
        menuFontsize.add(menuRadio100);

        menuRadio75.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_3, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuRadio75.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuRadio75.setText("75%");
        menuFontsize.add(menuRadio75);

        menuRadio50.setAccelerator(javax.swing.KeyStroke.getKeyStroke(java.awt.event.KeyEvent.VK_4, java.awt.event.InputEvent.ALT_DOWN_MASK));
        menuRadio50.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        menuRadio50.setText("50%");
        menuFontsize.add(menuRadio50);

        jMenuBar1.add(menuFontsize);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addGap(10, 10, 10)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(MenuFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new MenuFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JMenuItem black;
    private javax.swing.JMenuItem blue;
    private javax.swing.ButtonGroup btnGroupColor;
    private javax.swing.ButtonGroup buttonGroupFontSize;
    private javax.swing.JMenuItem green;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JMenu jMenu2;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JCheckBoxMenuItem menuCheckboxUnderline;
    private javax.swing.JCheckBoxMenuItem menuCheckboxUpper;
    private javax.swing.JMenu menuFile;
    private javax.swing.JMenu menuFontsize;
    private javax.swing.JMenuItem menuItemEdit;
    private javax.swing.JMenuItem menuItemExit;
    private javax.swing.JMenu menuItemRed;
    private javax.swing.JMenuItem menuItemRemove;
    private javax.swing.JMenuItem menuItemSave;
    private javax.swing.JRadioButtonMenuItem menuRadio100;
    private javax.swing.JRadioButtonMenuItem menuRadio150;
    private javax.swing.JRadioButtonMenuItem menuRadio50;
    private javax.swing.JRadioButtonMenuItem menuRadio75;
    private javax.swing.JCheckBoxMenuItem meunuCheckboxBold;
    private javax.swing.JMenuItem red;
    private javax.swing.JTextArea txtText;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(menuItemExit)) {
            dispose();
        } else if (e.getSource().equals(menuItemSave)) {
            txt = txtText.getText();
            txtText.setEditable(false);
        } else if (e.getSource().equals(menuItemEdit)) {
            txtText.setEditable(true);
        } else if (e.getSource().equals(menuItemRemove)) {
            txtText.setText("");
        } else if (e.getSource().equals(menuCheckboxUpper)) {
            uppercase();
        } else if (e.getSource().equals(meunuCheckboxBold)) {
            bold();
        } else if (e.getSource().equals(menuCheckboxUnderline)) {
            underline();
        } else if (e.getSource().equals(red)) {
            txtText.setForeground(Color.RED);
        } else if (e.getSource().equals(black)) {
            txtText.setForeground(Color.BLACK);

        } else if (e.getSource().equals(blue)) {
            txtText.setForeground(Color.BLUE);

        } else if (e.getSource().equals(green)) {
            txtText.setForeground(Color.GREEN);
        }else if(e.getSource().equals(menuRadio100)) {
            if(menuRadio100.isSelected()) {
                txtText.setFont(new Font(txtText.getFont().getName(),
                        txtText.getFont().getStyle(), (int)(FONT_SIZE*1)));
            }
                
        }

    }

    private void addActionListener() {
        menuItemExit.addActionListener(this);
        menuItemEdit.addActionListener(this);
        menuItemRemove.addActionListener(this);
        menuItemSave.addActionListener(this);
        menuCheckboxUnderline.addActionListener(this);
        menuCheckboxUpper.addActionListener(this);
        black.addActionListener(this);
        blue.addActionListener(this);
        green.addActionListener(this);
        menuItemRed.addActionListener(this);
        meunuCheckboxBold.addActionListener(this);
        red.addActionListener(this);
        blue.addActionListener(this);
        green.addActionListener(this);
        black.addActionListener(this);
        menuRadio100.addActionListener(this);
        menuRadio150.addActionListener(this);
        menuRadio75.addActionListener(this);
        menuRadio50.addActionListener(this);
    }

    private void uppercase() {
        if (menuCheckboxUpper.isSelected()) {
            txtText.setText(txt.toUpperCase());
        } else {
            txtText.setText(txt.toLowerCase());
        }
    }

    private void bold() {
        if (meunuCheckboxBold.isSelected()) {
            txtText.setFont(new Font(txtText.getFont().getName(), Font.BOLD,
                    FONT_SIZE));
        } else {
            txtText.setFont(new Font(txtText.getFont().getName(), Font.PLAIN,
                    FONT_SIZE));
        }
    }

    private void underline() {
        if (menuCheckboxUnderline.isSelected()) {
            var font = txtText.getFont();
            Map map = font.getAttributes();
            map.put(TextAttribute.UNDERLINE, TextAttribute.UNDERLINE_ON);
            txtText.setFont(font.deriveFont(map));
        } else {
            var font = txtText.getFont();
            Map map = font.getAttributes();
            map.put(TextAttribute.UNDERLINE, -1);
            txtText.setFont(font.deriveFont(map));
        }
    }
}
