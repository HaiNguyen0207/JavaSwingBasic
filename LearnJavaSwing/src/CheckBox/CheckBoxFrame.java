package CheckBox;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author unilap
 */
public class CheckBoxFrame extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form CheckBoxFrame
     */
    public CheckBoxFrame() {
        initComponents();
        setLocationRelativeTo(null);
        //thêm sự kiện cho từng checkbox
        cbCat.addActionListener(this);
        cbChicken.addActionListener(this);
        cbDuck.addActionListener(this);
        cbPig.addActionListener(this);
        cbRabbit.addActionListener(this);
        cbDog.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        iconDog1 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        iconChicken = new javax.swing.JLabel();
        iconPig = new javax.swing.JLabel();
        inconDuck = new javax.swing.JLabel();
        iconCat = new javax.swing.JLabel();
        iconDog = new javax.swing.JLabel();
        iconRabbit = new javax.swing.JLabel();
        cbDog = new javax.swing.JCheckBox();
        cbChicken = new javax.swing.JCheckBox();
        cbDuck = new javax.swing.JCheckBox();
        cbRabbit = new javax.swing.JCheckBox();
        cbCat = new javax.swing.JCheckBox();
        cbPig = new javax.swing.JCheckBox();

        iconDog1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/dog.png"))); // NOI18N

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 24)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(0, 255, 51));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("PET CỦA BẠN");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chọn Pet Của Bạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N

        iconChicken.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/chicken.png"))); // NOI18N
        iconChicken.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iconChicken.setEnabled(false);

        iconPig.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/pig.png"))); // NOI18N
        iconPig.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iconPig.setEnabled(false);

        inconDuck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/duck.jpg"))); // NOI18N
        inconDuck.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        inconDuck.setEnabled(false);
        inconDuck.setPreferredSize(new java.awt.Dimension(0, 0));

        iconCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/cat.png"))); // NOI18N
        iconCat.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iconCat.setEnabled(false);

        iconDog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/dog.png"))); // NOI18N
        iconDog.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iconDog.setEnabled(false);

        iconRabbit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/CheckBox/images/rabbit.png"))); // NOI18N
        iconRabbit.setBorder(javax.swing.BorderFactory.createTitledBorder(""));
        iconRabbit.setEnabled(false);

        cbDog.setText("Chó");

        cbChicken.setText("Gà");

        cbDuck.setText("Vịt");

        cbRabbit.setText("Thỏ");

        cbCat.setText("Mèo");

        cbPig.setText("Lợn");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconPig, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconDog, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDog, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbPig, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconCat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCat, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(45, 45, 45)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 85, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(inconDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 151, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconRabbit))
                .addContainerGap(30, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDog)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(cbChicken)
                            .addComponent(cbDuck))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(inconDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconDog, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 23, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(cbRabbit)
                    .addComponent(cbCat)
                    .addComponent(cbPig))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconCat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconPig, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
            .addComponent(jPanel1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckBoxFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbCat;
    private javax.swing.JCheckBox cbChicken;
    private javax.swing.JCheckBox cbDog;
    private javax.swing.JCheckBox cbDuck;
    private javax.swing.JCheckBox cbPig;
    private javax.swing.JCheckBox cbRabbit;
    private javax.swing.JLabel iconCat;
    private javax.swing.JLabel iconChicken;
    private javax.swing.JLabel iconDog;
    private javax.swing.JLabel iconDog1;
    private javax.swing.JLabel iconPig;
    private javax.swing.JLabel iconRabbit;
    private javax.swing.JLabel inconDuck;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        var obj = e.getSource();
        if (obj.equals(cbCat)) {
            iconCat.setEnabled(!iconCat.isEnabled());
        } else if (obj.equals(cbChicken)) {
            iconChicken.setEnabled(!iconChicken.isEnabled());
        } else if (obj.equals(cbDog)) {
            iconDog.setEnabled(!iconDog.isEnabled());
        } else if (obj.equals(cbPig)) {
            iconPig.setEnabled(!iconPig.isEnabled());
        } else if (obj.equals(cbRabbit)) {
            iconRabbit.setEnabled(!iconRabbit.isEnabled());
        } else if (obj.equals(cbDuck)) {
            inconDuck.setEnabled(!inconDuck.isEnabled());
        }

    }
}
