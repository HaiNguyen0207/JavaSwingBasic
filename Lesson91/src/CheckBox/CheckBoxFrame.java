package CheckBox;

import java.awt.event.ActionEvent;
import java.awt.event.ActionListener;

/**
 *
 * @author unilap
 */
public class CheckBoxFrame extends javax.swing.JFrame implements ActionListener {

    /**
     * Creates new form CheckBoxFrame
     */
    public CheckBoxFrame() {
        initComponents();
        setLocationRelativeTo(null);
        cbCat.addActionListener(this);
        cbChicken.addActionListener(this);
        cbDog.addActionListener(this);
        cbDuck.addActionListener(this);
        cbPig.addActionListener(this);
        cbRabbit.addActionListener(this);
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        jEditorPane1 = new javax.swing.JEditorPane();
        jSeparator1 = new javax.swing.JSeparator();
        jLabel1 = new javax.swing.JLabel();
        jPanel1 = new javax.swing.JPanel();
        iconRabbit = new javax.swing.JLabel();
        iconCat = new javax.swing.JLabel();
        iconChicken = new javax.swing.JLabel();
        iconDog = new javax.swing.JLabel();
        iconDuck = new javax.swing.JLabel();
        iconPig = new javax.swing.JLabel();
        cbCat = new javax.swing.JCheckBox();
        cbChicken = new javax.swing.JCheckBox();
        cbDog = new javax.swing.JCheckBox();
        cbDuck = new javax.swing.JCheckBox();
        cbPig = new javax.swing.JCheckBox();
        cbRabbit = new javax.swing.JCheckBox();

        jScrollPane1.setViewportView(jEditorPane1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("HaiNguyen");
        setResizable(false);

        jLabel1.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel1.setForeground(new java.awt.Color(255, 0, 0));
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Pet Của Bạn");

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Chọn Pet Của Bạn", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14), new java.awt.Color(255, 0, 0))); // NOI18N

        iconRabbit.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconRabbit.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/rabbit.png"))); // NOI18N
        iconRabbit.setEnabled(false);

        iconCat.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconCat.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/cat.png"))); // NOI18N
        iconCat.setEnabled(false);

        iconChicken.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconChicken.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/chicken.png"))); // NOI18N
        iconChicken.setEnabled(false);

        iconDog.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconDog.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/dog.png"))); // NOI18N
        iconDog.setEnabled(false);

        iconDuck.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconDuck.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/duck.jpg"))); // NOI18N
        iconDuck.setEnabled(false);

        iconPig.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        iconPig.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/pig.png"))); // NOI18N
        iconPig.setEnabled(false);

        cbCat.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbCat.setText("Mèo");

        cbChicken.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbChicken.setText("Gà");

        cbDog.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbDog.setText("Chó");

        cbDuck.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbDuck.setText("Vịt");

        cbPig.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbPig.setText("Lợn");

        cbRabbit.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cbRabbit.setText("Thỏ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(40, 40, 40)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconCat, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbCat, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(cbRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iconChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(30, 30, 30)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDog, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconDog, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel1Layout.createSequentialGroup()
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(iconPig, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(cbPig, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(cbDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 88, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(iconDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 150, javax.swing.GroupLayout.PREFERRED_SIZE))))
                .addContainerGap(51, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbCat)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(cbChicken, javax.swing.GroupLayout.Alignment.TRAILING)
                        .addGroup(jPanel1Layout.createSequentialGroup()
                            .addContainerGap()
                            .addComponent(cbDog))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(iconCat, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconChicken, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconDog, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 8, Short.MAX_VALUE)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(cbDuck, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbPig, javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(cbRabbit, javax.swing.GroupLayout.Alignment.TRAILING))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(iconRabbit, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconDuck, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(iconPig, javax.swing.GroupLayout.PREFERRED_SIZE, 100, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(20, 20, 20))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(21, 21, 21)
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGap(12, 12, 12))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(CheckBoxFrame.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new CheckBoxFrame().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JCheckBox cbCat;
    private javax.swing.JCheckBox cbChicken;
    private javax.swing.JCheckBox cbDog;
    private javax.swing.JCheckBox cbDuck;
    private javax.swing.JCheckBox cbPig;
    private javax.swing.JCheckBox cbRabbit;
    private javax.swing.JLabel iconCat;
    private javax.swing.JLabel iconChicken;
    private javax.swing.JLabel iconDog;
    private javax.swing.JLabel iconDuck;
    private javax.swing.JLabel iconPig;
    private javax.swing.JLabel iconRabbit;
    private javax.swing.JEditorPane jEditorPane1;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    // End of variables declaration//GEN-END:variables

    @Override
    public void actionPerformed(ActionEvent e) {
        if (e.getSource().equals(cbCat)) {
            iconCat.setEnabled(!iconCat.isEnabled());
        } else if (e.getSource().equals(cbChicken)) {
            iconChicken.setEnabled(!iconChicken.isEnabled());
        } else if (e.getSource().equals(cbDuck)) {
            iconDuck.setEnabled(!iconDuck.isEnabled());
        } else if (e.getSource().equals(cbDog)) {
            iconDog.setEnabled(!iconDog.isEnabled());
        } else if (e.getSource().equals(cbPig)) {
            iconPig.setEnabled(!iconPig.isEnabled());
        } else if (e.getSource().equals(cbRabbit)) {
            iconRabbit.setEnabled(!iconRabbit.isEnabled());
        }
    }
}
